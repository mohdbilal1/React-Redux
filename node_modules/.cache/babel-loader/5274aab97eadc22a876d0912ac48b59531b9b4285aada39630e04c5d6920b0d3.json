{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n//create api services\nexport const postApi = createApi({\n  reducerPath: 'postApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://jsonplaceholder.typicode.com/'\n  }),\n  endpoints: builder => ({\n    getAllPost: builder.query({\n      query: () => ({\n        url: 'posts',\n        method: \"GET\"\n      })\n    }),\n    getSinglePostById: builder.query({\n      query: id => ({\n        url: `posts/${id}`,\n        method: \"GET\"\n      })\n    }),\n    getLimitedData: builder.query({\n      query: num => {\n        console.log('limit no : ', num);\n        return {\n          url: `posts?_limit=${num}`,\n          method: 'GET'\n        };\n      }\n    })\n  })\n});\nexport const {\n  useGetAllPostQuery,\n  useGetSinglePostByIdQuery,\n  useGetLimitedDataQuery\n} = postApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","postApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllPost","query","url","method","getSinglePostById","id","getLimitedData","num","console","log","useGetAllPostQuery","useGetSinglePostByIdQuery","useGetLimitedDataQuery"],"sources":["D:/react-redux/react redux app/src/services/post.js"],"sourcesContent":["import {createApi ,fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\n//create api services\r\nexport const postApi=createApi({\r\n    reducerPath:'postApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://jsonplaceholder.typicode.com/',\r\n    }),\r\n    endpoints:(builder)=>({\r\n        getAllPost: builder.query({\r\n            query:()=>({\r\n                url:'posts',\r\n                method:\"GET\"\r\n            })\r\n        }),\r\n        getSinglePostById:builder.query({\r\n            query:(id)=>({\r\n                url:`posts/${id}`,\r\n                method:\"GET\",\r\n            })\r\n        }),\r\n        getLimitedData:builder.query({\r\n            query:(num)=>{\r\n                console.log('limit no : ',num);\r\n                return{\r\n                    url:`posts?_limit=${num}`,\r\n                    method:'GET'\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n})\r\n\r\nexport const {useGetAllPostQuery,useGetSinglePostByIdQuery,useGetLimitedDataQuery}=postApi;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;;AAEtE;AACA,OAAO,MAAMC,OAAO,GAACF,SAAS,CAAC;EAC3BG,WAAW,EAAC,SAAS;EACrBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,SAAS,EAAEC,OAAO,KAAI;IAClBC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAACA,CAAA,MAAK;QACPC,GAAG,EAAC,OAAO;QACXC,MAAM,EAAC;MACX,CAAC;IACL,CAAC,CAAC;IACFC,iBAAiB,EAACL,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAEI,EAAE,KAAI;QACTH,GAAG,EAAE,SAAQG,EAAG,EAAC;QACjBF,MAAM,EAAC;MACX,CAAC;IACL,CAAC,CAAC;IACFG,cAAc,EAACP,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAEM,GAAG,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACF,GAAG,CAAC;QAC9B,OAAM;UACFL,GAAG,EAAE,gBAAeK,GAAI,EAAC;UACzBJ,MAAM,EAAC;QACX,CAAC;MACL;IACJ,CAAC;EACL,CAAC;AAEL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACO,kBAAkB;EAACC,yBAAyB;EAACC;AAAsB,CAAC,GAAClB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
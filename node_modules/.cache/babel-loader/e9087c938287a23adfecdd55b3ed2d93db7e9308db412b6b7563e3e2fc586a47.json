{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-redux\\\\react redux app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useGetAllPostQuery, useGetSinglePostByIdQuery, useGetLimitedDataQuery } from './services/post';\nimport './App.css';\n\n//get all data\n\n// function App() {\n//   const responseInfo=useGetAllPostQuery();\n//   console.log(\"response information :\",responseInfo);\n//   console.log(responseInfo.data);\n//   // console.log(responseInfo.isSuccess);\n//   // console.log(responseInfo.requestId);\n//   return (\n//     <>\n//     <h1>redux toolkit -RTK query (getAllData)</h1>\n//     {\n//       responseInfo.data && responseInfo.data.map((val,index)=>\n//         <div key={index}>\n//           <h2>{val.id} {val.title}</h2>\n//           <p>{val.body}</p>\n//           <hr />\n//         </div>\n//       )\n//     }\n//     </>\n//   );\n// }\n\n//get single data using id\n\n// function App() {\n//   const responseInfo=useGetSinglePostByIdQuery(55);\n//   // console.log(\"response information :\",responseInfo);\n//   console.log(responseInfo.data);\n//   // console.log(responseInfo.isSuccess);\n//   // console.log(responseInfo.requestId);\n//   return (\n//     <>\n//     <h1>redux toolkit -RTK query (get single Data)</h1>\n\n//       <div>\n//         <h2>{responseInfo.data && responseInfo.data.id} { responseInfo.data && responseInfo.data.title}</h2>\n//         <p>{ responseInfo.data && responseInfo.data.body}</p>\n//         <hr />\n//       </div>\n//     </>\n//   );\n// }\n\n//get limited data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const responseInfo = useGetLimitedDataQuery(5);\n  // console.log(\"response information :\",responseInfo);\n  console.log(responseInfo.data);\n  // console.log(responseInfo.isSuccess);\n  // console.log(responseInfo.requestId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"redux toolkit -RTK query (get limited Data)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), responseInfo.data && responseInfo.data.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [val.id, \" \", val.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: val.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"/h62lydrhaC8gKblud/vVWFSdUg=\", false, function () {\n  return [useGetLimitedDataQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useGetAllPostQuery","useGetSinglePostByIdQuery","useGetLimitedDataQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","responseInfo","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","val","index","id","title","body","_c","$RefreshReg$"],"sources":["D:/react-redux/react redux app/src/App.js"],"sourcesContent":["import { useGetAllPostQuery,useGetSinglePostByIdQuery,useGetLimitedDataQuery } from './services/post';\nimport './App.css';\n\n//get all data\n\n// function App() {\n//   const responseInfo=useGetAllPostQuery();\n//   console.log(\"response information :\",responseInfo);\n//   console.log(responseInfo.data);\n//   // console.log(responseInfo.isSuccess);\n//   // console.log(responseInfo.requestId);\n//   return (\n//     <>\n//     <h1>redux toolkit -RTK query (getAllData)</h1>\n//     {\n//       responseInfo.data && responseInfo.data.map((val,index)=>\n//         <div key={index}>\n//           <h2>{val.id} {val.title}</h2>\n//           <p>{val.body}</p>\n//           <hr />\n//         </div>\n//       )\n//     }\n//     </>\n//   );\n// }\n\n//get single data using id\n\n// function App() {\n//   const responseInfo=useGetSinglePostByIdQuery(55);\n//   // console.log(\"response information :\",responseInfo);\n//   console.log(responseInfo.data);\n//   // console.log(responseInfo.isSuccess);\n//   // console.log(responseInfo.requestId);\n//   return (\n//     <>\n//     <h1>redux toolkit -RTK query (get single Data)</h1>\n    \n//       <div>\n//         <h2>{responseInfo.data && responseInfo.data.id} { responseInfo.data && responseInfo.data.title}</h2>\n//         <p>{ responseInfo.data && responseInfo.data.body}</p>\n//         <hr />\n//       </div>\n//     </>\n//   );\n// }\n\n\n//get limited data\n\nfunction App() {\n  const responseInfo=useGetLimitedDataQuery(5);\n  // console.log(\"response information :\",responseInfo);\n  console.log(responseInfo.data);\n  // console.log(responseInfo.isSuccess);\n  // console.log(responseInfo.requestId);\n  return (\n    <>\n    <h1>redux toolkit -RTK query (get limited Data)</h1>\n    {\n      responseInfo.data && responseInfo.data.map((val,index)=>\n        <div key={index}>\n          <h2>{val.id} {val.title}</h2>\n          <p>{val.body}</p>\n          <hr />\n        </div>\n      )\n    }\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAACC,yBAAyB,EAACC,sBAAsB,QAAQ,iBAAiB;AACrG,OAAO,WAAW;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAACP,sBAAsB,CAAC,CAAC,CAAC;EAC5C;EACAQ,OAAO,CAACC,GAAG,CAACF,YAAY,CAACG,IAAI,CAAC;EAC9B;EACA;EACA,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA;MAAAS,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAElDR,YAAY,CAACG,IAAI,IAAIH,YAAY,CAACG,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,kBACnDhB,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,GAAKM,GAAG,CAACE,EAAE,EAAC,GAAC,EAACF,GAAG,CAACG,KAAK;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7Bb,OAAA;QAAAS,QAAA,EAAIM,GAAG,CAACI;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBb,OAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAHEG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACP,CAAC;EAAA,eAED,CAAC;AAEP;AAACT,EAAA,CApBQD,GAAG;EAAA,QACSL,sBAAsB;AAAA;AAAAsB,EAAA,GADlCjB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}